// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.libvirt.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DomainFilesystem {
    private final @Nullable String accessmode;
    private final @Nullable Boolean readonly;
    private final String source;
    private final String target;

    @CustomType.Constructor
    private DomainFilesystem(
        @CustomType.Parameter("accessmode") @Nullable String accessmode,
        @CustomType.Parameter("readonly") @Nullable Boolean readonly,
        @CustomType.Parameter("source") String source,
        @CustomType.Parameter("target") String target) {
        this.accessmode = accessmode;
        this.readonly = readonly;
        this.source = source;
        this.target = target;
    }

    public Optional<String> accessmode() {
        return Optional.ofNullable(this.accessmode);
    }
    public Optional<Boolean> readonly() {
        return Optional.ofNullable(this.readonly);
    }
    public String source() {
        return this.source;
    }
    public String target() {
        return this.target;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainFilesystem defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String accessmode;
        private @Nullable Boolean readonly;
        private String source;
        private String target;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainFilesystem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessmode = defaults.accessmode;
    	      this.readonly = defaults.readonly;
    	      this.source = defaults.source;
    	      this.target = defaults.target;
        }

        public Builder accessmode(@Nullable String accessmode) {
            this.accessmode = accessmode;
            return this;
        }
        public Builder readonly(@Nullable Boolean readonly) {
            this.readonly = readonly;
            return this;
        }
        public Builder source(String source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }
        public Builder target(String target) {
            this.target = Objects.requireNonNull(target);
            return this;
        }        public DomainFilesystem build() {
            return new DomainFilesystem(accessmode, readonly, source, target);
        }
    }
}
