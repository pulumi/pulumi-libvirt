// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.libvirt.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkDnsSrvArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkDnsSrvArgs Empty = new NetworkDnsSrvArgs();

    /**
     * The domain used by the DNS server.
     * 
     */
    @Import(name="domain")
    private @Nullable Output<String> domain;

    /**
     * @return The domain used by the DNS server.
     * 
     */
    public Optional<Output<String>> domain() {
        return Optional.ofNullable(this.domain);
    }

    @Import(name="port")
    private @Nullable Output<String> port;

    public Optional<Output<String>> port() {
        return Optional.ofNullable(this.port);
    }

    @Import(name="priority")
    private @Nullable Output<String> priority;

    public Optional<Output<String>> priority() {
        return Optional.ofNullable(this.priority);
    }

    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    @Import(name="service")
    private @Nullable Output<String> service;

    public Optional<Output<String>> service() {
        return Optional.ofNullable(this.service);
    }

    @Import(name="target")
    private @Nullable Output<String> target;

    public Optional<Output<String>> target() {
        return Optional.ofNullable(this.target);
    }

    @Import(name="weight")
    private @Nullable Output<String> weight;

    public Optional<Output<String>> weight() {
        return Optional.ofNullable(this.weight);
    }

    private NetworkDnsSrvArgs() {}

    private NetworkDnsSrvArgs(NetworkDnsSrvArgs $) {
        this.domain = $.domain;
        this.port = $.port;
        this.priority = $.priority;
        this.protocol = $.protocol;
        this.service = $.service;
        this.target = $.target;
        this.weight = $.weight;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkDnsSrvArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkDnsSrvArgs $;

        public Builder() {
            $ = new NetworkDnsSrvArgs();
        }

        public Builder(NetworkDnsSrvArgs defaults) {
            $ = new NetworkDnsSrvArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domain The domain used by the DNS server.
         * 
         * @return builder
         * 
         */
        public Builder domain(@Nullable Output<String> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain The domain used by the DNS server.
         * 
         * @return builder
         * 
         */
        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        public Builder port(@Nullable Output<String> port) {
            $.port = port;
            return this;
        }

        public Builder port(String port) {
            return port(Output.of(port));
        }

        public Builder priority(@Nullable Output<String> priority) {
            $.priority = priority;
            return this;
        }

        public Builder priority(String priority) {
            return priority(Output.of(priority));
        }

        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        public Builder service(@Nullable Output<String> service) {
            $.service = service;
            return this;
        }

        public Builder service(String service) {
            return service(Output.of(service));
        }

        public Builder target(@Nullable Output<String> target) {
            $.target = target;
            return this;
        }

        public Builder target(String target) {
            return target(Output.of(target));
        }

        public Builder weight(@Nullable Output<String> weight) {
            $.weight = weight;
            return this;
        }

        public Builder weight(String weight) {
            return weight(Output.of(weight));
        }

        public NetworkDnsSrvArgs build() {
            return $;
        }
    }

}
