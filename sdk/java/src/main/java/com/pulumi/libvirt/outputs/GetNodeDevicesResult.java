// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.libvirt.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNodeDevicesResult {
    private @Nullable String capability;
    /**
     * @return A list of devices that match the selected capability
     * 
     */
    private List<String> devices;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;

    private GetNodeDevicesResult() {}
    public Optional<String> capability() {
        return Optional.ofNullable(this.capability);
    }
    /**
     * @return A list of devices that match the selected capability
     * 
     */
    public List<String> devices() {
        return this.devices;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNodeDevicesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String capability;
        private List<String> devices;
        private String id;
        public Builder() {}
        public Builder(GetNodeDevicesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capability = defaults.capability;
    	      this.devices = defaults.devices;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder capability(@Nullable String capability) {

            this.capability = capability;
            return this;
        }
        @CustomType.Setter
        public Builder devices(List<String> devices) {
            if (devices == null) {
              throw new MissingRequiredPropertyException("GetNodeDevicesResult", "devices");
            }
            this.devices = devices;
            return this;
        }
        public Builder devices(String... devices) {
            return devices(List.of(devices));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNodeDevicesResult", "id");
            }
            this.id = id;
            return this;
        }
        public GetNodeDevicesResult build() {
            final var _resultValue = new GetNodeDevicesResult();
            _resultValue.capability = capability;
            _resultValue.devices = devices;
            _resultValue.id = id;
            return _resultValue;
        }
    }
}
