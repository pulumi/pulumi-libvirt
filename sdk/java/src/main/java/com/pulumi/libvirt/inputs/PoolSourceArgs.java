// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.libvirt.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.libvirt.inputs.PoolSourceDeviceArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PoolSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final PoolSourceArgs Empty = new PoolSourceArgs();

    @Import(name="devices")
    private @Nullable Output<List<PoolSourceDeviceArgs>> devices;

    public Optional<Output<List<PoolSourceDeviceArgs>>> devices() {
        return Optional.ofNullable(this.devices);
    }

    /**
     * A unique name for the resource, required by libvirt.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A unique name for the resource, required by libvirt.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private PoolSourceArgs() {}

    private PoolSourceArgs(PoolSourceArgs $) {
        this.devices = $.devices;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PoolSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PoolSourceArgs $;

        public Builder() {
            $ = new PoolSourceArgs();
        }

        public Builder(PoolSourceArgs defaults) {
            $ = new PoolSourceArgs(Objects.requireNonNull(defaults));
        }

        public Builder devices(@Nullable Output<List<PoolSourceDeviceArgs>> devices) {
            $.devices = devices;
            return this;
        }

        public Builder devices(List<PoolSourceDeviceArgs> devices) {
            return devices(Output.of(devices));
        }

        public Builder devices(PoolSourceDeviceArgs... devices) {
            return devices(List.of(devices));
        }

        /**
         * @param name A unique name for the resource, required by libvirt.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A unique name for the resource, required by libvirt.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public PoolSourceArgs build() {
            return $;
        }
    }

}
