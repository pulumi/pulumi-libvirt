// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.libvirt.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetNetworkDnsHostTemplateArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNetworkDnsHostTemplateArgs Empty = new GetNetworkDnsHostTemplateArgs();

    @Import(name="hostname", required=true)
    private Output<String> hostname;

    public Output<String> hostname() {
        return this.hostname;
    }

    @Import(name="ip", required=true)
    private Output<String> ip;

    public Output<String> ip() {
        return this.ip;
    }

    private GetNetworkDnsHostTemplateArgs() {}

    private GetNetworkDnsHostTemplateArgs(GetNetworkDnsHostTemplateArgs $) {
        this.hostname = $.hostname;
        this.ip = $.ip;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNetworkDnsHostTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNetworkDnsHostTemplateArgs $;

        public Builder() {
            $ = new GetNetworkDnsHostTemplateArgs();
        }

        public Builder(GetNetworkDnsHostTemplateArgs defaults) {
            $ = new GetNetworkDnsHostTemplateArgs(Objects.requireNonNull(defaults));
        }

        public Builder hostname(Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        public Builder ip(Output<String> ip) {
            $.ip = ip;
            return this;
        }

        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        public GetNetworkDnsHostTemplateArgs build() {
            if ($.hostname == null) {
                throw new MissingRequiredPropertyException("GetNetworkDnsHostTemplateArgs", "hostname");
            }
            if ($.ip == null) {
                throw new MissingRequiredPropertyException("GetNetworkDnsHostTemplateArgs", "ip");
            }
            return $;
        }
    }

}
