// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.libvirt.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;


public final class GetNodeDeviceInfoCapabilityIommuGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetNodeDeviceInfoCapabilityIommuGroupArgs Empty = new GetNodeDeviceInfoCapabilityIommuGroupArgs();

    @Import(name="addresses", required=true)
    private Output<List<Map<String,String>>> addresses;

    public Output<List<Map<String,String>>> addresses() {
        return this.addresses;
    }

    /**
     * Device number
     * 
     */
    @Import(name="number", required=true)
    private Output<String> number;

    /**
     * @return Device number
     * 
     */
    public Output<String> number() {
        return this.number;
    }

    private GetNodeDeviceInfoCapabilityIommuGroupArgs() {}

    private GetNodeDeviceInfoCapabilityIommuGroupArgs(GetNodeDeviceInfoCapabilityIommuGroupArgs $) {
        this.addresses = $.addresses;
        this.number = $.number;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNodeDeviceInfoCapabilityIommuGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNodeDeviceInfoCapabilityIommuGroupArgs $;

        public Builder() {
            $ = new GetNodeDeviceInfoCapabilityIommuGroupArgs();
        }

        public Builder(GetNodeDeviceInfoCapabilityIommuGroupArgs defaults) {
            $ = new GetNodeDeviceInfoCapabilityIommuGroupArgs(Objects.requireNonNull(defaults));
        }

        public Builder addresses(Output<List<Map<String,String>>> addresses) {
            $.addresses = addresses;
            return this;
        }

        public Builder addresses(List<Map<String,String>> addresses) {
            return addresses(Output.of(addresses));
        }

        public Builder addresses(Map<String,String>... addresses) {
            return addresses(List.of(addresses));
        }

        /**
         * @param number Device number
         * 
         * @return builder
         * 
         */
        public Builder number(Output<String> number) {
            $.number = number;
            return this;
        }

        /**
         * @param number Device number
         * 
         * @return builder
         * 
         */
        public Builder number(String number) {
            return number(Output.of(number));
        }

        public GetNodeDeviceInfoCapabilityIommuGroupArgs build() {
            if ($.addresses == null) {
                throw new MissingRequiredPropertyException("GetNodeDeviceInfoCapabilityIommuGroupArgs", "addresses");
            }
            if ($.number == null) {
                throw new MissingRequiredPropertyException("GetNodeDeviceInfoCapabilityIommuGroupArgs", "number");
            }
            return $;
        }
    }

}
