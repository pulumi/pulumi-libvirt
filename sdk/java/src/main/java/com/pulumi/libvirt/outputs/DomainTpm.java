// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.libvirt.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DomainTpm {
    /**
     * @return Path to TPM device on the host, ex: `/dev/tpm0`
     * 
     */
    private final @Nullable String backendDevicePath;
    /**
     * @return [Secret object](https://libvirt.org/formatsecret.html) for encrypting the TPM state
     * 
     */
    private final @Nullable String backendEncryptionSecret;
    /**
     * @return Keep the TPM state when a transient domain is powered off or undefined
     * 
     */
    private final @Nullable Boolean backendPersistentState;
    /**
     * @return TPM backend, either `passthrough` or `emulator` (default: `emulator`)
     * 
     */
    private final @Nullable String backendType;
    /**
     * @return TPM version
     * 
     */
    private final @Nullable String backendVersion;
    /**
     * @return TPM model provided to the guest
     * 
     */
    private final @Nullable String model;

    @CustomType.Constructor
    private DomainTpm(
        @CustomType.Parameter("backendDevicePath") @Nullable String backendDevicePath,
        @CustomType.Parameter("backendEncryptionSecret") @Nullable String backendEncryptionSecret,
        @CustomType.Parameter("backendPersistentState") @Nullable Boolean backendPersistentState,
        @CustomType.Parameter("backendType") @Nullable String backendType,
        @CustomType.Parameter("backendVersion") @Nullable String backendVersion,
        @CustomType.Parameter("model") @Nullable String model) {
        this.backendDevicePath = backendDevicePath;
        this.backendEncryptionSecret = backendEncryptionSecret;
        this.backendPersistentState = backendPersistentState;
        this.backendType = backendType;
        this.backendVersion = backendVersion;
        this.model = model;
    }

    /**
     * @return Path to TPM device on the host, ex: `/dev/tpm0`
     * 
     */
    public Optional<String> backendDevicePath() {
        return Optional.ofNullable(this.backendDevicePath);
    }
    /**
     * @return [Secret object](https://libvirt.org/formatsecret.html) for encrypting the TPM state
     * 
     */
    public Optional<String> backendEncryptionSecret() {
        return Optional.ofNullable(this.backendEncryptionSecret);
    }
    /**
     * @return Keep the TPM state when a transient domain is powered off or undefined
     * 
     */
    public Optional<Boolean> backendPersistentState() {
        return Optional.ofNullable(this.backendPersistentState);
    }
    /**
     * @return TPM backend, either `passthrough` or `emulator` (default: `emulator`)
     * 
     */
    public Optional<String> backendType() {
        return Optional.ofNullable(this.backendType);
    }
    /**
     * @return TPM version
     * 
     */
    public Optional<String> backendVersion() {
        return Optional.ofNullable(this.backendVersion);
    }
    /**
     * @return TPM model provided to the guest
     * 
     */
    public Optional<String> model() {
        return Optional.ofNullable(this.model);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainTpm defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String backendDevicePath;
        private @Nullable String backendEncryptionSecret;
        private @Nullable Boolean backendPersistentState;
        private @Nullable String backendType;
        private @Nullable String backendVersion;
        private @Nullable String model;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainTpm defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendDevicePath = defaults.backendDevicePath;
    	      this.backendEncryptionSecret = defaults.backendEncryptionSecret;
    	      this.backendPersistentState = defaults.backendPersistentState;
    	      this.backendType = defaults.backendType;
    	      this.backendVersion = defaults.backendVersion;
    	      this.model = defaults.model;
        }

        public Builder backendDevicePath(@Nullable String backendDevicePath) {
            this.backendDevicePath = backendDevicePath;
            return this;
        }
        public Builder backendEncryptionSecret(@Nullable String backendEncryptionSecret) {
            this.backendEncryptionSecret = backendEncryptionSecret;
            return this;
        }
        public Builder backendPersistentState(@Nullable Boolean backendPersistentState) {
            this.backendPersistentState = backendPersistentState;
            return this;
        }
        public Builder backendType(@Nullable String backendType) {
            this.backendType = backendType;
            return this;
        }
        public Builder backendVersion(@Nullable String backendVersion) {
            this.backendVersion = backendVersion;
            return this;
        }
        public Builder model(@Nullable String model) {
            this.model = model;
            return this;
        }        public DomainTpm build() {
            return new DomainTpm(backendDevicePath, backendEncryptionSecret, backendPersistentState, backendType, backendVersion, model);
        }
    }
}
