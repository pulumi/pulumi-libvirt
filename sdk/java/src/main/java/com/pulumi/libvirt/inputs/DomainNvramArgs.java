// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.libvirt.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainNvramArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainNvramArgs Empty = new DomainNvramArgs();

    /**
     * The filename to use as the block device for this disk (read-only)
     * 
     */
    @Import(name="file", required=true)
    private Output<String> file;

    /**
     * @return The filename to use as the block device for this disk (read-only)
     * 
     */
    public Output<String> file() {
        return this.file;
    }

    /**
     * path to the file used to override variables from the master NVRAM
     * store.
     * 
     * So you should typically use the firmware as this,
     * 
     * and `/etc/libvirt/qemu.conf` should contain:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     * In case you need (or want) to specify the path for the NVRAM store, the domain definition should
     * look like this:
     * 
     * Finally, if you want the initial values for the NVRAM to be overridden by custom initial values
     * coming from a template, the domain definition should look like this:
     * 
     */
    @Import(name="template")
    private @Nullable Output<String> template;

    /**
     * @return path to the file used to override variables from the master NVRAM
     * store.
     * 
     * So you should typically use the firmware as this,
     * 
     * and `/etc/libvirt/qemu.conf` should contain:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     * In case you need (or want) to specify the path for the NVRAM store, the domain definition should
     * look like this:
     * 
     * Finally, if you want the initial values for the NVRAM to be overridden by custom initial values
     * coming from a template, the domain definition should look like this:
     * 
     */
    public Optional<Output<String>> template() {
        return Optional.ofNullable(this.template);
    }

    private DomainNvramArgs() {}

    private DomainNvramArgs(DomainNvramArgs $) {
        this.file = $.file;
        this.template = $.template;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainNvramArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainNvramArgs $;

        public Builder() {
            $ = new DomainNvramArgs();
        }

        public Builder(DomainNvramArgs defaults) {
            $ = new DomainNvramArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param file The filename to use as the block device for this disk (read-only)
         * 
         * @return builder
         * 
         */
        public Builder file(Output<String> file) {
            $.file = file;
            return this;
        }

        /**
         * @param file The filename to use as the block device for this disk (read-only)
         * 
         * @return builder
         * 
         */
        public Builder file(String file) {
            return file(Output.of(file));
        }

        /**
         * @param template path to the file used to override variables from the master NVRAM
         * store.
         * 
         * So you should typically use the firmware as this,
         * 
         * and `/etc/libvirt/qemu.conf` should contain:
         * ```java
         * package generated_program;
         * 
         * import com.pulumi.Context;
         * import com.pulumi.Pulumi;
         * import com.pulumi.core.Output;
         * import java.util.List;
         * import java.util.ArrayList;
         * import java.util.Map;
         * import java.io.File;
         * import java.nio.file.Files;
         * import java.nio.file.Paths;
         * 
         * public class App {
         *     public static void main(String[] args) {
         *         Pulumi.run(App::stack);
         *     }
         * 
         *     public static void stack(Context ctx) {
         *     }
         * }
         * ```
         * 
         * In case you need (or want) to specify the path for the NVRAM store, the domain definition should
         * look like this:
         * 
         * Finally, if you want the initial values for the NVRAM to be overridden by custom initial values
         * coming from a template, the domain definition should look like this:
         * 
         * @return builder
         * 
         */
        public Builder template(@Nullable Output<String> template) {
            $.template = template;
            return this;
        }

        /**
         * @param template path to the file used to override variables from the master NVRAM
         * store.
         * 
         * So you should typically use the firmware as this,
         * 
         * and `/etc/libvirt/qemu.conf` should contain:
         * ```java
         * package generated_program;
         * 
         * import com.pulumi.Context;
         * import com.pulumi.Pulumi;
         * import com.pulumi.core.Output;
         * import java.util.List;
         * import java.util.ArrayList;
         * import java.util.Map;
         * import java.io.File;
         * import java.nio.file.Files;
         * import java.nio.file.Paths;
         * 
         * public class App {
         *     public static void main(String[] args) {
         *         Pulumi.run(App::stack);
         *     }
         * 
         *     public static void stack(Context ctx) {
         *     }
         * }
         * ```
         * 
         * In case you need (or want) to specify the path for the NVRAM store, the domain definition should
         * look like this:
         * 
         * Finally, if you want the initial values for the NVRAM to be overridden by custom initial values
         * coming from a template, the domain definition should look like this:
         * 
         * @return builder
         * 
         */
        public Builder template(String template) {
            return template(Output.of(template));
        }

        public DomainNvramArgs build() {
            if ($.file == null) {
                throw new MissingRequiredPropertyException("DomainNvramArgs", "file");
            }
            return $;
        }
    }

}
