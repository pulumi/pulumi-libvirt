// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.libvirt.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainFilesystemArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainFilesystemArgs Empty = new DomainFilesystemArgs();

    @Import(name="accessmode")
    private @Nullable Output<String> accessmode;

    public Optional<Output<String>> accessmode() {
        return Optional.ofNullable(this.accessmode);
    }

    @Import(name="readonly")
    private @Nullable Output<Boolean> readonly;

    public Optional<Output<Boolean>> readonly() {
        return Optional.ofNullable(this.readonly);
    }

    @Import(name="source", required=true)
    private Output<String> source;

    public Output<String> source() {
        return this.source;
    }

    @Import(name="target", required=true)
    private Output<String> target;

    public Output<String> target() {
        return this.target;
    }

    private DomainFilesystemArgs() {}

    private DomainFilesystemArgs(DomainFilesystemArgs $) {
        this.accessmode = $.accessmode;
        this.readonly = $.readonly;
        this.source = $.source;
        this.target = $.target;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainFilesystemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainFilesystemArgs $;

        public Builder() {
            $ = new DomainFilesystemArgs();
        }

        public Builder(DomainFilesystemArgs defaults) {
            $ = new DomainFilesystemArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessmode(@Nullable Output<String> accessmode) {
            $.accessmode = accessmode;
            return this;
        }

        public Builder accessmode(String accessmode) {
            return accessmode(Output.of(accessmode));
        }

        public Builder readonly(@Nullable Output<Boolean> readonly) {
            $.readonly = readonly;
            return this;
        }

        public Builder readonly(Boolean readonly) {
            return readonly(Output.of(readonly));
        }

        public Builder source(Output<String> source) {
            $.source = source;
            return this;
        }

        public Builder source(String source) {
            return source(Output.of(source));
        }

        public Builder target(Output<String> target) {
            $.target = target;
            return this;
        }

        public Builder target(String target) {
            return target(Output.of(target));
        }

        public DomainFilesystemArgs build() {
            if ($.source == null) {
                throw new MissingRequiredPropertyException("DomainFilesystemArgs", "source");
            }
            if ($.target == null) {
                throw new MissingRequiredPropertyException("DomainFilesystemArgs", "target");
            }
            return $;
        }
    }

}
