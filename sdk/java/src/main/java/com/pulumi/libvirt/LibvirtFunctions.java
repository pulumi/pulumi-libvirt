// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.libvirt;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.libvirt.Utilities;
import com.pulumi.libvirt.inputs.GetNetworkDnsHostTemplateArgs;
import com.pulumi.libvirt.inputs.GetNetworkDnsHostTemplatePlainArgs;
import com.pulumi.libvirt.inputs.GetNetworkDnsSrvTemplateArgs;
import com.pulumi.libvirt.inputs.GetNetworkDnsSrvTemplatePlainArgs;
import com.pulumi.libvirt.inputs.GetNetworkDnsmasqOptionsTemplateArgs;
import com.pulumi.libvirt.inputs.GetNetworkDnsmasqOptionsTemplatePlainArgs;
import com.pulumi.libvirt.outputs.GetNetworkDnsHostTemplateResult;
import com.pulumi.libvirt.outputs.GetNetworkDnsSrvTemplateResult;
import com.pulumi.libvirt.outputs.GetNetworkDnsmasqOptionsTemplateResult;
import java.util.concurrent.CompletableFuture;

public final class LibvirtFunctions {
    public static Output<GetNetworkDnsHostTemplateResult> getNetworkDnsHostTemplate(GetNetworkDnsHostTemplateArgs args) {
        return getNetworkDnsHostTemplate(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetNetworkDnsHostTemplateResult> getNetworkDnsHostTemplatePlain(GetNetworkDnsHostTemplatePlainArgs args) {
        return getNetworkDnsHostTemplatePlain(args, InvokeOptions.Empty);
    }
    public static Output<GetNetworkDnsHostTemplateResult> getNetworkDnsHostTemplate(GetNetworkDnsHostTemplateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("libvirt:index/getNetworkDnsHostTemplate:getNetworkDnsHostTemplate", TypeShape.of(GetNetworkDnsHostTemplateResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetNetworkDnsHostTemplateResult> getNetworkDnsHostTemplatePlain(GetNetworkDnsHostTemplatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("libvirt:index/getNetworkDnsHostTemplate:getNetworkDnsHostTemplate", TypeShape.of(GetNetworkDnsHostTemplateResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetNetworkDnsSrvTemplateResult> getNetworkDnsSrvTemplate(GetNetworkDnsSrvTemplateArgs args) {
        return getNetworkDnsSrvTemplate(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetNetworkDnsSrvTemplateResult> getNetworkDnsSrvTemplatePlain(GetNetworkDnsSrvTemplatePlainArgs args) {
        return getNetworkDnsSrvTemplatePlain(args, InvokeOptions.Empty);
    }
    public static Output<GetNetworkDnsSrvTemplateResult> getNetworkDnsSrvTemplate(GetNetworkDnsSrvTemplateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("libvirt:index/getNetworkDnsSrvTemplate:getNetworkDnsSrvTemplate", TypeShape.of(GetNetworkDnsSrvTemplateResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetNetworkDnsSrvTemplateResult> getNetworkDnsSrvTemplatePlain(GetNetworkDnsSrvTemplatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("libvirt:index/getNetworkDnsSrvTemplate:getNetworkDnsSrvTemplate", TypeShape.of(GetNetworkDnsSrvTemplateResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetNetworkDnsmasqOptionsTemplateResult> getNetworkDnsmasqOptionsTemplate(GetNetworkDnsmasqOptionsTemplateArgs args) {
        return getNetworkDnsmasqOptionsTemplate(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetNetworkDnsmasqOptionsTemplateResult> getNetworkDnsmasqOptionsTemplatePlain(GetNetworkDnsmasqOptionsTemplatePlainArgs args) {
        return getNetworkDnsmasqOptionsTemplatePlain(args, InvokeOptions.Empty);
    }
    public static Output<GetNetworkDnsmasqOptionsTemplateResult> getNetworkDnsmasqOptionsTemplate(GetNetworkDnsmasqOptionsTemplateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("libvirt:index/getNetworkDnsmasqOptionsTemplate:getNetworkDnsmasqOptionsTemplate", TypeShape.of(GetNetworkDnsmasqOptionsTemplateResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetNetworkDnsmasqOptionsTemplateResult> getNetworkDnsmasqOptionsTemplatePlain(GetNetworkDnsmasqOptionsTemplatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("libvirt:index/getNetworkDnsmasqOptionsTemplate:getNetworkDnsmasqOptionsTemplate", TypeShape.of(GetNetworkDnsmasqOptionsTemplateResult.class), args, Utilities.withVersion(options));
    }
}
