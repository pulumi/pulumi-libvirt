// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Libvirt.Outputs
{

    [OutputType]
    public sealed class DomainConsole
    {
        /// <summary>
        /// IP address to listen on. Defaults to 127.0.0.1.
        /// </summary>
        public readonly string? SourceHost;
        /// <summary>
        /// Source path
        /// 
        /// Additional attributes when type is "tcp":
        /// </summary>
        public readonly string? SourcePath;
        /// <summary>
        /// Port number or a service name. Defaults to a
        /// random port.
        /// 
        /// Note that you can repeat the `console` block to create more than one console.
        /// This works the same way as with the `disk` blocks (see above).
        /// 
        /// See [libvirt Domain XML Console element](https://libvirt.org/formatdomain.html#elementsConsole)
        /// for more information.
        /// </summary>
        public readonly string? SourceService;
        /// <summary>
        /// Target port
        /// </summary>
        public readonly string TargetPort;
        /// <summary>
        /// for the first console and defaults to `serial`.
        /// Subsequent `console` blocks must have a different type - usually `virtio`.
        /// 
        /// Additional attributes when type is "pty":
        /// </summary>
        public readonly string? TargetType;
        /// <summary>
        /// The type of hypervisor to use for the domain.  Defaults to `kvm`, other values can be found [here](https://libvirt.org/formatdomain.html#id1)
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private DomainConsole(
            string? sourceHost,

            string? sourcePath,

            string? sourceService,

            string targetPort,

            string? targetType,

            string type)
        {
            SourceHost = sourceHost;
            SourcePath = sourcePath;
            SourceService = sourceService;
            TargetPort = targetPort;
            TargetType = targetType;
            Type = type;
        }
    }
}
