// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Libvirt.Outputs
{

    [OutputType]
    public sealed class DomainFilesystem
    {
        /// <summary>
        /// specifies the security mode for accessing the source. By default
        /// the `mapped` mode is chosen.
        /// </summary>
        public readonly string? Accessmode;
        /// <summary>
        /// enables exporting filesystem as a readonly mount for guest, by
        /// default read-only access is given.
        /// 
        /// Example:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        /// });
        /// ```
        /// 
        /// The exported filesystems can be mounted inside of the guest in this way:
        /// </summary>
        public readonly bool? Readonly;
        /// <summary>
        /// the directory of the host to be shared with the guest.
        /// </summary>
        public readonly string Source;
        /// <summary>
        /// an arbitrary string tag that is exported to the guest as a hint for
        /// where to mount the source.
        /// </summary>
        public readonly string Target;

        [OutputConstructor]
        private DomainFilesystem(
            string? accessmode,

            bool? @readonly,

            string source,

            string target)
        {
            Accessmode = accessmode;
            Readonly = @readonly;
            Source = source;
            Target = target;
        }
    }
}
